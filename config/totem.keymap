//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define Base        0
#define Media       1
#define Nav         2
#define Mouse       3
#define Sym         4
#define Num         5
#define Fun         6
#define Button      7
#define Game        8
#define Gameplus    9

&mt {
    quick-tap-ms = <100>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <170>;
};

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };

        KP_DOT_SHIFT_COMMA: KP_DOT_SHIFT_COMMA {
            compatible = "zmk,behavior-mod-morph";
            label = "KP_DOT_SHIFT_COMMA";
            bindings = <&kp PERIOD>, <&kp COMMA>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        KP_COLON_SHIFT_SEMICOLON: KP_COLON_SHIFT_SEMICOLON {
            compatible = "zmk,behavior-mod-morph";
            label = "KP_COLON_SHIFT_SEMICOLON";
            bindings = <&kp COLON>, <&kp SEMICOLON>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        UBER_DOT: UBER_DOT {
            compatible = "zmk,behavior-mod-morph";
            label = "UBER_DOT";
            bindings = <&KP_DOT_SHIFT_COMMA>, <&KP_COLON_SHIFT_SEMICOLON>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
        };

        KP_RU_E_ALT_RU_YO: KP_RU_E_ALT_RU_YO {
            compatible = "zmk,behavior-mod-morph";
            label = "KP_RU_E_ALT_RU_YO";
            bindings = <&kp T>, <&kp GRAVE>;

            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        KP_RU_MZ_ALT_RU_TZ: KP_RU_MZ_ALT_RU_TZ {
            compatible = "zmk,behavior-mod-morph";
            label = "KP_RU_MZ_ALT_RU_TZ";
            bindings = <&kp M>, <&kp RIGHT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_RALT|MOD_LALT)>;
        };

        KP_RU_ZH_ALT_RU_H: KP_RU_ZH_ALT_RU_H {
            compatible = "zmk,behavior-mod-morph";
            label = "KP_RU_ZH_ALT_RU_H";
            bindings = <&kp SEMICOLON>, <&kp LEFT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_RALT|MOD_LALT)>;
        };

        KP_QT_SHIFT_DQT: KP_QT_SHIFT_DQT {
            compatible = "zmk,behavior-mod-morph";
            label = "KP_QT_SHIFT_DQT";
            bindings = <&kp SQT>, <&kp DQT>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        KP_SQTDQT_CTRL_GRAVE: KP_SQTDQT_CTRL_GRAVE {
            compatible = "zmk,behavior-mod-morph";
            label = "KP_SQTDQT_CTRL_GRAVE";
            bindings = <&KP_QT_SHIFT_DQT>, <&kp GRAVE>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
        };

        KP_SL_SHIFT_BSL: KP_SL_SHIFT_BSL {
            compatible = "zmk,behavior-mod-morph";
            label = "KP_SL_SHIFT_BSL";
            bindings = <&kp SLASH>, <&kp BACKSLASH>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        KP_SL_BSL_CTRL_PIPE: KP_SL_BSL_CTRL_PIPE {
            compatible = "zmk,behavior-mod-morph";
            label = "KP_SL_BSL_CTRL_PIPE";
            bindings = <&KP_SL_SHIFT_BSL>, <&kp PIPE>;

            #binding-cells = <0>;
            mods = <(MOD_RCTL|MOD_LCTL)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        CTRL_SPACE_TOG4_COMBO {
            bindings = <&mo 4>;
            key-positions = <33 34>;
        };

        QA_ESC_COMBO {
            bindings = <&kp ESCAPE>;
            key-positions = <0 10>;
        };

        AZ_LANG_COMBO {
            bindings = <&LANG_MACRO>;
            key-positions = <21 10>;
        };

        enter-left {
            bindings = <&kp ENTER>;
            key-positions = <25 24>;
        };

        enter-right {
            bindings = <&kp ENTER>;
            key-positions = <27 26>;
        };

        delete-left {
            bindings = <&kp DEL>;
            key-positions = <20 21>;
        };

        delete-right {
            bindings = <&kp DEL>;
            key-positions = <31 30>;
        };
    };

    macros {
        LANG_MACRO: LANG {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp LEFT_SHIFT>,
                <&macro_release>,
                <&kp LCTRL &kp LEFT_SHIFT>,
                <&macro_press>,
                <&kp LCTRL &kp SPACE>,
                <&macro_release>,
                <&kp LCTRL &kp SPACE>;

            label = "LANG";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            label = "BASE";
            bindings = <
         &kp Q  &kp W  &kp E         &kp R             &KP_RU_E_ALT_RU_YO    &kp Y  &kp U                &kp I           &kp O    &kp P
         &kp A  &kp S  &kp D         &kp F             &kp G                 &kp H  &kp J                &kp K           &kp L    &KP_RU_ZH_ALT_RU_H
&kp TAB  &kp Z  &kp X  &kp C         &kp V             &kp B                 &kp N  &KP_RU_MZ_ALT_RU_TZ  &kp COMMA       &kp DOT  &KP_SL_BSL_CTRL_PIPE  &UBER_DOT
                       &kp LEFT_ALT  &kp LEFT_CONTROL  &kp SPACE             &mo 2  &mo 1                &kp LEFT_SHIFT
            >;
        };

        Num {
            bindings = <
            &kp N1    &kp N2    &kp N3         &kp N4      &kp N5       &kp N6          &kp N7          &kp N8        &kp N9           &kp N0
            &kp LGUI  &kp LALT  &kp LSHIFT     &kp LCTRL   &kp F11      &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &kp F12
&kp ESCAPE  &kp F1    &kp F2    &kp F3         &kp F4      &kp F5       &kp F6          &kp F7          &kp F8        &kp F9           &kp F10  &kp ENTER
                                &kp BACKSPACE  &kp DELETE  &kp ENTER    &trans          &mo 3           &trans
            >;

            label = "NUM";
        };

        Sym {
            label = "SYM";
            bindings = <
           &kp EXCL   &kp AT         &kp HASH          &kp DOLLAR        &kp PERCENT       &kp CARET        &kp AMPERSAND  &kp SINGLE_QUOTE   &kp DOUBLE_QUOTES  &kp QUESTION
           &kp GRAVE  &kp BACKSLASH  &kp LEFT_BRACKET  &kp LPAR          &kp LEFT_BRACE    &kp RIGHT_BRACE  &kp RPAR       &kp RIGHT_BRACKET  &kp SLASH          &kp PIPE
&kp TILDE  &kp COMMA  &kp LESS_THAN  &kp EQUAL         &kp GREATER_THAN  &kp QUESTION      &kp UNDERSCORE   &kp MINUS      &kp PLUS           &kp KP_MULTIPLY    &kp DOT       &kp ENTER
                                     &kp BACKSPACE     &kp DELETE        &kp ENTER         &mo 3            &trans         &caps_word
            >;
        };

        Eee {
            label = "EEE";
            bindings = <
        &trans        &trans        &trans          &trans     &trans    &trans  &trans    &trans         &trans       &trans
        &kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_SHIFT  &kp LCTRL  &trans    &trans  &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END
&trans  &trans        &trans        &trans          &trans     &trans    &trans  &trans    &trans         &trans       &trans   &trans
                                    &trans          &trans     &trans    &trans  &trans    &trans
            >;
        };

        Button {
            label = "BUTTON";
            bindings = <
        &trans    &trans        &trans    &trans     &out OUT_BLE    &kp C_BRIGHTNESS_INC   &kp K_VOLUME_UP    &kp C_AC_DESKTOP_SHOW_ALL_WINDOWS  &trans  &bt BT_SEL 0
        &kp LEFT  &kp UP_ARROW  &kp DOWN  &kp RIGHT  &out OUT_TOG    &kp C_BRIGHTNESS_DEC   &kp K_VOLUME_DOWN  &trans                             &trans  &bt BT_SEL 1
&tog 5  &trans    &trans        &trans    &trans     &out OUT_USB    &kp C_BRIGHTNESS_AUTO  &kp K_MUTE         &trans                             &trans  &bt BT_SEL 2  &studio_unlock
                                &trans    &trans     &trans          &kp C_PREV             &kp C_PLAY_PAUSE   &kp C_NEXT
            >;
        };

        Gaming {
            bindings = <
         &kp ESCAPE        &kp Q  &kp W         &kp E  &kp R        &trans  &trans  &trans  &trans  &trans
         &kp LEFT_SHIFT    &kp A  &kp S         &kp D  &kp F        &trans  &trans  &trans  &trans  &trans
&kp TAB  &kp LEFT_CONTROL  &kp Z  &kp X         &kp C  &kp V        &trans  &trans  &trans  &trans  &trans  &to 0
                                  &kp LEFT_ALT  &mo 6  &kp SPACE    &trans  &trans  &trans
            >;

            label = "GAMING";
        };

        Gaming+ {
            bindings = <
         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5    &trans  &trans  &trans  &trans  &kp LC(RA(DEL))
         &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0    &kp F5  &trans  &trans  &trans  &trans
&kp TAB  &kp Y         &kp U         &kp I         &kp O         &kp P           &trans  &trans  &trans  &trans  &trans           &kp LA(F4)
                                     &trans        &trans        &trans          &trans  &trans  &trans
            >;

            label = "GAMING+";
        };
    };
};
