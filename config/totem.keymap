//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

#define Base        0
#define Media       1
#define Nav         2
#define Mouse       3
#define Sym         4
#define Num         5
#define Fun         6
#define Button      7
#define Game        8
#define Gameplus    9

&mt {
    quick-tap-ms = <100>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <170>;
};

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };

        KP_DOT_SHIFT_COMMA: KP_DOT_SHIFT_COMMA {
            compatible = "zmk,behavior-mod-morph";
            label = "KP_DOT_SHIFT_COMMA";
            bindings = <&kp KP_DOT>, <&kp KP_COMMA>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        KP_COLON_SHIFT_SEMICOLON: KP_COLON_SHIFT_SEMICOLON {
            compatible = "zmk,behavior-mod-morph";
            label = "KP_COLON_SHIFT_SEMICOLON";
            bindings = <&kp COLON>, <&kp SEMICOLON>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        UBER_DOT: UBER_DOT {
            compatible = "zmk,behavior-mod-morph";
            label = "UBER_DOT";
            bindings = <&KP_DOT_SHIFT_COMMA>, <&KP_COLON_SHIFT_SEMICOLON>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
        };

        UBER_SPACE: UBER_SPACE {
            compatible = "zmk,behavior-mod-morph";
            label = "UBER_SPACE";
            bindings = <&kp SPACE>, <&KP_SPACE_SHIFT_ENTER>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT|MOD_LCTL|MOD_RCTL)>;
        };

        KP_SPACE_SHIFT_ENTER: KP_SPACE_SHIFT_ENTER {
            compatible = "zmk,behavior-mod-morph";
            label = "KP_SPACE_SHIFT_ENTER";
            bindings = <&kp SPACE>, <&kp ENTER>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        KP_RU_E_ALT_RU_YO: KP_RU_E_ALT_RU_YO {
            compatible = "zmk,behavior-mod-morph";
            label = "KP_RU_E_ALT_RU_YO";
            bindings = <&kp T>, <&kp GRAVE>;

            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        Base {
            label = "Base";
            bindings = <
              &kp Q  &kp W  &kp E   &kp R   &KP_RU_E_ALT_RU_YO    &kp Y      &kp U           &kp I         &kp O    &kp P
              &kp A  &kp S  &kp D   &kp F   &kp G                 &kp H      &kp J           &kp K         &kp L    &kp SEMICOLON
&lt 0 ESCAPE  &kp Z  &kp X  &kp C   &kp V   &kp B                 &kp N      &kp M           &kp COMMA     &kp DOT  &kp SLASH      &UBER_DOT
                            &tog 2  &tog 1  &UBER_SPACE           &kp LCTRL  &kp LEFT_SHIFT  &kp LEFT_ALT
            >;
        };

        NUM {
            bindings = <
        &kp N1    &kp N2    &kp N3      &kp N4     &kp N5     &kp N6   &kp N7          &kp N8          &kp N9        &kp N0
        &kp LGUI  &kp LALT  &kp LSHIFT  &kp LCTRL  &kp F11    &kp F12  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT
&trans  &kp F1    &kp F2    &kp F3      &kp F4     &kp F5     &kp F6   &kp F7          &kp F8          &kp F9        &kp F10    &trans
                            &trans      &trans     &trans     &trans   &trans          &tog 3
            >;

            label = "Num";
        };

        SYM {
            label = "Sym";
            bindings = <
        &kp EXCL  &kp AT  &kp HASH  &kp DOLLAR  &kp PERCENT    &kp CARET  &kp AMPERSAND  &kp KP_ASTERISK  &kp SQT  &kp DQT
        &trans    &trans  &trans    &trans      &trans         &trans     &trans         &trans           &trans   &trans
&trans  &trans    &trans  &trans    &trans      &trans         &kp UNDER  &kp EQUAL      &trans           &trans   &kp SLASH  &kp HOME
                          &trans    &trans      &trans         &trans     &tog 3         &trans
            >;
        };

        Nav {
            label = "Nav";
            bindings = <
              &trans          &trans       &trans    &trans     &kp LBRC    &kp RBRC  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp PLUS
              &kp LEFT_SHIFT  &kp LEFT     &kp DOWN  &kp RIGHT  &kp LBKT    &kp RBKT  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS
&kp LEFT_ALT  &trans          &kp PAGE_UP  &trans    &kp PG_DN  &kp LPAR    &kp RPAR  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp KP_MULTIPLY  &trans
                                           &trans    &trans     &trans      &trans    &trans        &kp NUMBER_0
            >;
        };

        Button {
            label = "Button";
            bindings = <
             &bt BT_CLR         &trans    &trans     &trans      &bt BT_SEL 0    &trans      &trans            &trans      &bootloader  &trans
             &kp LGUI           &kp LALT  &kp LCTRL  &kp LSHIFT  &bt BT_SEL 1    &trans      &kp RSHIFT        &kp RCTRL   &kp RALT     &kp RGUI
&bootloader  &ext_power EP_TOG  &trans    &trans     &trans      &bt BT_SEL 2    &trans      &trans            &trans      &trans       &trans    &trans
                                          &trans     &trans      &trans          &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT
            >;
        };

        Gaming {
            bindings = <
            &trans  &trans  &trans     &trans        &trans    &trans  &trans  &trans  &trans  &trans
            &kp A   &kp S   &kp D      &kp F         &mo 6     &trans  &trans  &trans  &trans  &trans
&kp ESCAPE  &trans  &trans  &trans     &trans        &trans    &trans  &trans  &trans  &trans  &trans  &trans
                            &kp LCTRL  &kp LEFT_ALT  &trans    &trans  &trans  &trans
            >;

            label = "Gaming";
        };

        Gaming+ {
            bindings = <
         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5    &trans  &trans  &trans  &trans  &kp LC(RA(DEL))
         &kp L         &kp O         &kp Y         &kp K         &kp G           &kp F5  &trans  &trans  &trans  &trans
&kp TAB  &to 0         &trans        &trans        &kp NUMBER_6  &kp NUMBER_7    &trans  &trans  &trans  &trans  &trans           &kp LA(F4)
                                     &kp J         &kp I         &kp M           &trans  &trans  &trans
            >;

            label = "Gaming+";
        };
    };
};
